server.modules              = (
            "mod_access",
            "mod_alias",
            "mod_accesslog",
            "mod_compress",
            "mod_fastcgi",
            "mod_redirect",
            "mod_expire",

#           "mod_rewrite",
#           "mod_evhost",
#           "mod_usertrack",
#           "mod_rrdtool",
#           "mod_webdav",
#           "mod_flv_streaming",
#           "mod_evasive"
)

## a static document-root, for virtual-hosting take look at the
## server.virtual-* options
server.document-root       = "/var/www/"

## where to upload files to, purged daily.
server.upload-dirs = ( "/var/cache/lighttpd/uploads" )

## where to send error-messages to
server.errorlog            = "/var/log/lighttpd/error.log"

## files to check for if .../ is requested
index-file.names           = ( "index.php", "index.html",
                               "index.htm", "default.htm",
                               "index.lighttpd.html" )


## Use the "Content-Type" extended attribute to obtain mime type if possible
# mimetype.use-xattr = "enable"

#### accesslog module
accesslog.filename         = "/var/log/lighttpd/access.log"

## deny access the file-extensions
#
# ~    is for backupfiles from vi, emacs, joe, ...
# .inc is often used for code includes which should in general not be part
#      of the document-root
url.access-deny            = ( "~", ".inc" )


######### Options that are good to be but not neccesary to be changed #######

## Use ipv6 only if available.
include_shell "/usr/share/lighttpd/use-ipv6.pl"

## to help the rc.scripts
server.pid-file            = "/var/run/lighttpd.pid"


## change uid to <uid> (default: don't care)
server.username            = "www-data"

## change uid to <uid> (default: don't care)
server.groupname           = "www-data"

#### compress module
compress.cache-dir          = "/var/cache/lighttpd/compress/"
compress.filetype           = ("text/plain", "text/html", "application/x-javascript", "text/css")

#### expire module
expire.url                  = ( "/static/" => "access 24 hours", "/images/" => "access 24 hours" )

## mimetype mapping
include_shell "/usr/share/lighttpd/create-mime.assign.pl"

# Config for YourNextMP.com main site
$HTTP["host"] =~ "^www\.yournextmp\.com" {
    # Serve static content via lighttpd directly
    alias.url = (
        "/favicon.ico" => "/var/www/yournextmp_production/root/favicon.ico",
        "/robots.txt"  => "/var/www/yournextmp_production/root/robots.txt",
        "/static"      => "/var/www/yournextmp_production/root/static/",
    )
    $HTTP["url"] !~ "^/(favicon.ico$|robots.txt$|static)" {
        fastcgi.server = (
            "" => (  # anything not matching the URL above is handled by Catalyst
                "localhost_server" => (
                    "host"              => "127.0.0.1",
                    "port"              => 55900,
                    "check-local"       => "disable",
                    "allow-x-send-file" => "enable" 
                )
            )
        )
    }
}

# Config for YourNextMP.com staging site
$HTTP["host"] =~ "^stage\.yournextmp\.com" {
    # Serve static content via lighttpd directly
    alias.url = (
        "/favicon.ico" => "/var/www/yournextmp_stage/root/favicon.ico",
        "/robots.txt"  => "/var/www/yournextmp_stage/root/robots_dev.txt",
        "/static"      => "/var/www/yournextmp_stage/root/static/",
    )
    $HTTP["url"] !~ "^/(favicon.ico$|robots.txt$|static)" {
        fastcgi.server = (
            "" => (  # anything not matching the URL above is handled by Catalyst
                "localhost_server" => (
                    "host"              => "127.0.0.1",
                    "port"              => 55901,
                    "check-local"       => "disable",
                    "allow-x-send-file" => "enable" 
                )
            )
        )
    }
}

# Redirect alternative domains to www.yournextmp.com 
# Note: The second match is required since a non-match doesn't set any groups)
$HTTP["host"] !~ "^(www|stage)\.(yournextmp\.com)$" {
  # $HTTP["host"] =~ ".*" {
    url.redirect = (
      "^/(.*)" => "http://www.yournextmp.com/$1" 
    )
  # }
} 

